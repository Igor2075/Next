{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport _extends from \"@babel/runtime/helpers/esm/extends\";\n\nvar _jsxFileName = \"C:\\\\Study\\\\Next\\\\pages\\\\posts.js\",\n    _this2 = this;\n\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nimport React from \"react\";\nimport axios from \"axios\";\nexport default function Posts(_ref) {\n  var _this = this;\n\n  var id = _ref.id,\n      comments = _ref.comments;\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Comments for Post $\", id), comments.map(function (comment) {\n    return __jsx(Comment, _extends({}, comment, {\n      key: comment.id,\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 9,\n        columnNumber: 9\n      }\n    }));\n  }));\n}\n\nvar Comment = function Comment(_ref2) {\n  var email = _ref2.email,\n      body = _ref2.body;\n  return __jsx(\"div\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 3\n    }\n  }, __jsx(\"h5\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 5\n    }\n  }, email), __jsx(\"p\", {\n    __self: _this2,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 18,\n      columnNumber: 5\n    }\n  }, body));\n};\n\nPosts.getInitialProps = function _callee(_ref3) {\n  var query, res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          query = _ref3.query;\n          _context.next = 3;\n          return _regeneratorRuntime.awrap(axios.get(\"https://jsonplaceholder.typicode.com/comments?postId=\".concat(query.id)));\n\n        case 3:\n          res = _context.sent;\n          data = res.data;\n          return _context.abrupt(\"return\", _objectSpread({}, query, {\n            comments: data\n          }));\n\n        case 6:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Study/Next/pages/posts.js"],"names":["React","axios","Posts","id","comments","map","comment","Comment","email","body","getInitialProps","query","get","res","data"],"mappings":";;;;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,OAAiC;AAAA;;AAAA,MAAhBC,EAAgB,QAAhBA,EAAgB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC9C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBD,EAAxB,CADF,EAEGC,QAAQ,CAACC,GAAT,CAAa,UAACC,OAAD;AAAA,WACZ,MAAC,OAAD,eAAaA,OAAb;AAAsB,MAAA,GAAG,EAAEA,OAAO,CAACH,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADY;AAAA,GAAb,CAFH,CADF;AAQD;;AAED,IAAMI,OAAO,GAAG,SAAVA,OAAU;AAAA,MAAGC,KAAH,SAAGA,KAAH;AAAA,MAAUC,IAAV,SAAUA,IAAV;AAAA,SACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAKD,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAIC,IAAJ,CAFF,CADc;AAAA,CAAhB;;AAOAP,KAAK,CAACQ,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAASC,UAAAA,KAAT,SAASA,KAAT;AAAA;AAAA,2CACJV,KAAK,CAACW,GAAN,gEACwCD,KAAK,CAACR,EAD9C,EADI;;AAAA;AAChBU,UAAAA,GADgB;AAKdC,UAAAA,IALc,GAKLD,GALK,CAKdC,IALc;AAAA,6DAMVH,KANU;AAMHP,YAAAA,QAAQ,EAAEU;AANP;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Posts({ id, comments }) {\r\n  return (\r\n    <div>\r\n      <h1>Comments for Post ${id}</h1>\r\n      {comments.map((comment) => (\r\n        <Comment {...comment} key={comment.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Comment = ({ email, body }) => (\r\n  <div>\r\n    <h5>{email}</h5>\r\n    <p>{body}</p>\r\n  </div>\r\n);\r\n\r\nPosts.getInitialProps = async ({ query }) => {\r\n  const res = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/comments?postId=${query.id}`\r\n  );\r\n\r\n  const { data } = res;\r\n  return { ...query, comments: data };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}