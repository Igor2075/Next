{"ast":null,"code":"var _jsxFileName = \"C:\\\\Study\\\\Next\\\\pages\\\\posts.js\";\nvar __jsx = React.createElement;\n\nfunction ownKeys(object, enumerableOnly) { var keys = Object.keys(object); if (Object.getOwnPropertySymbols) { var symbols = Object.getOwnPropertySymbols(object); if (enumerableOnly) symbols = symbols.filter(function (sym) { return Object.getOwnPropertyDescriptor(object, sym).enumerable; }); keys.push.apply(keys, symbols); } return keys; }\n\nfunction _objectSpread(target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i] != null ? arguments[i] : {}; if (i % 2) { ownKeys(Object(source), true).forEach(function (key) { _defineProperty(target, key, source[key]); }); } else if (Object.getOwnPropertyDescriptors) { Object.defineProperties(target, Object.getOwnPropertyDescriptors(source)); } else { ownKeys(Object(source)).forEach(function (key) { Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key)); }); } } return target; }\n\nfunction _defineProperty(obj, key, value) { if (key in obj) { Object.defineProperty(obj, key, { value: value, enumerable: true, configurable: true, writable: true }); } else { obj[key] = value; } return obj; }\n\nfunction _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nimport React from \"react\";\nimport axios from \"axios\";\nexport default function Posts({\n  id,\n  comments\n}) {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 7,\n      columnNumber: 7\n    }\n  }, \"Comments for Post $\", id), comments.map(comment => __jsx(Comment, _extends({}, comment, {\n    key: comment.id,\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 9,\n      columnNumber: 9\n    }\n  }))));\n}\n\nconst Comment = ({\n  email,\n  body\n}) => __jsx(\"div\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 16,\n    columnNumber: 3\n  }\n}, __jsx(\"h5\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }\n}, email), __jsx(\"p\", {\n  __self: this,\n  __source: {\n    fileName: _jsxFileName,\n    lineNumber: 18,\n    columnNumber: 5\n  }\n}, body));\n\nPosts.getInitialProps = async ({\n  query\n}) => {\n  const res = await axios.get(`https://jsonplaceholder.typicode.com/comments?postId=${query.id}`);\n  const {\n    data\n  } = res;\n  return _objectSpread({}, query, {\n    comments: data\n  });\n};","map":{"version":3,"sources":["C:/Study/Next/pages/posts.js"],"names":["React","axios","Posts","id","comments","map","comment","Comment","email","body","getInitialProps","query","res","get","data"],"mappings":";;;;;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,CAAe;AAAEC,EAAAA,EAAF;AAAMC,EAAAA;AAAN,CAAf,EAAiC;AAC9C,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,4BAAwBD,EAAxB,CADF,EAEGC,QAAQ,CAACC,GAAT,CAAcC,OAAD,IACZ,MAAC,OAAD,eAAaA,OAAb;AAAsB,IAAA,GAAG,EAAEA,OAAO,CAACH,EAAnC;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KADD,CAFH,CADF;AAQD;;AAED,MAAMI,OAAO,GAAG,CAAC;AAAEC,EAAAA,KAAF;AAASC,EAAAA;AAAT,CAAD,KACd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAKD,KAAL,CADF,EAEE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,GAAIC,IAAJ,CAFF,CADF;;AAOAP,KAAK,CAACQ,eAAN,GAAwB,OAAO;AAAEC,EAAAA;AAAF,CAAP,KAAqB;AAC3C,QAAMC,GAAG,GAAG,MAAMX,KAAK,CAACY,GAAN,CACf,wDAAuDF,KAAK,CAACR,EAAG,EADjD,CAAlB;AAIA,QAAM;AAAEW,IAAAA;AAAF,MAAWF,GAAjB;AACA,2BAAYD,KAAZ;AAAmBP,IAAAA,QAAQ,EAAEU;AAA7B;AACD,CAPD","sourcesContent":["import React from \"react\";\r\nimport axios from \"axios\";\r\n\r\nexport default function Posts({ id, comments }) {\r\n  return (\r\n    <div>\r\n      <h1>Comments for Post ${id}</h1>\r\n      {comments.map((comment) => (\r\n        <Comment {...comment} key={comment.id} />\r\n      ))}\r\n    </div>\r\n  );\r\n}\r\n\r\nconst Comment = ({ email, body }) => (\r\n  <div>\r\n    <h5>{email}</h5>\r\n    <p>{body}</p>\r\n  </div>\r\n);\r\n\r\nPosts.getInitialProps = async ({ query }) => {\r\n  const res = await axios.get(\r\n    `https://jsonplaceholder.typicode.com/comments?postId=${query.id}`\r\n  );\r\n\r\n  const { data } = res;\r\n  return { ...query, comments: data };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}