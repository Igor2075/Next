{"ast":null,"code":"import _regeneratorRuntime from \"@babel/runtime/regenerator\";\nvar _jsxFileName = \"C:\\\\Study\\\\Next\\\\pages\\\\index.js\";\nvar __jsx = React.createElement;\nimport React from \"react\";\nexport default function index() {\n  return __jsx(\"div\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 5,\n      columnNumber: 5\n    }\n  }, __jsx(\"h1\", {\n    __self: this,\n    __source: {\n      fileName: _jsxFileName,\n      lineNumber: 6,\n      columnNumber: 7\n    }\n  }, \"Our Index Page\"));\n}\n\nindex.getInitialProps = function _callee() {\n  var res, data;\n  return _regeneratorRuntime.async(function _callee$(_context) {\n    while (1) {\n      switch (_context.prev = _context.next) {\n        case 0:\n          res = axios.get(\"https://jsonplaceholder.typicode.com/posts\");\n          data = res.data;\n          return _context.abrupt(\"return\", {\n            posts: data\n          });\n\n        case 3:\n        case \"end\":\n          return _context.stop();\n      }\n    }\n  }, null, null, null, Promise);\n};","map":{"version":3,"sources":["C:/Study/Next/pages/index.js"],"names":["React","index","getInitialProps","res","axios","get","data","posts"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AAEA,eAAe,SAASC,KAAT,GAAiB;AAC9B,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBADF,CADF;AAKD;;AACDA,KAAK,CAACC,eAAN,GAAwB;AAAA;AAAA;AAAA;AAAA;AAAA;AAChBC,UAAAA,GADgB,GACVC,KAAK,CAACC,GAAN,CAAU,4CAAV,CADU;AAEdC,UAAAA,IAFc,GAELH,GAFK,CAEdG,IAFc;AAAA,2CAGf;AAAEC,YAAAA,KAAK,EAAED;AAAT,WAHe;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,CAAxB","sourcesContent":["import React from \"react\";\r\n\r\nexport default function index() {\r\n  return (\r\n    <div>\r\n      <h1>Our Index Page</h1>\r\n    </div>\r\n  );\r\n}\r\nindex.getInitialProps = async () => {\r\n  const res = axios.get(\"https://jsonplaceholder.typicode.com/posts\");\r\n  const { data } = res;\r\n  return { posts: data };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}